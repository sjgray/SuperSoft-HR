[PROJECT]
LA=E7E9
DIVLEN=99
INLCOL=60
[ENTRYPT]
E900,Main Entry Point (actually E902)
EFC7,e1
EFCA,e2
EFCD,e3
EFD0,e4
EFD3,e5
EFD6,e6
EFD9,e7
EFDC,e8
EFDF,e9
EFE2,e10
EFE5,e11
EFE8,e12
EFEB,e13
EFEE,e14
EFF1,e15
EFF4,e16
EFF7,e17
EFFA,e18
EFFD,e19
[SYMBOLS]
0001,USRADD,USR Address Low Byte / High Byte
0003,CHARAC,Search Character
0004,ENDCHR,Flag: Scan for Quote at End of String
0005,COUNT ,Input Buffer Pointer / No. of Subscripts
0006,DIMFLG,Flag: Default Array DiMension / array name initial / AND, OR flag
0007,VAUYP ,Data Type: $FF = String, $00 = Numeric
0008,INTFLG,Data Type: $80 = Integer, $00 = Floating
0009,GARBFL,Flag: DATA scan/LlST quote/Garbage Coll
000A,SUBFLG,Flag: Subscript Ref / User Function Call
000B,INPFLG,Flag: $00 = INPUT, $40 = GET, $98 = READ
000C,TANSGN,Flag TAN sign / Comparison Result
000D,DSTAT ,Disk Status DS$ descriptor
0010,FNUM  ,File# of current I/O device (when non-zero suppresses INPUT prompt etc)
0011,LINNUM,Temp: Integer Value
0012,ZP_12,Zero Page Storage 12
0014,LASTPT,Last Temp String Address
0016,TEMPST,Stack for Temporary Strings
002E,STREND,Pointer End of BASIC Arrays (+1)
0032,STRINGPTR,Utility String Pointer
0033,ZP_33,Zero Page Storage 33
0034,MEMSIZ,Pointer: Highest Address Used by BASIC
003C,DATLIN,Current DATA Line Number
0061,ZP_61,Zero Page Storage 61
0062,ZP_62,Zero Page Storage 62
0063,FACSGN,Floating Accum.   #1: Sign
0070,CHRGET,Subroutine: Get Next Byte of BASIC Text
0076,CHRGOT,Entry to Get Same Byte of Text Again
0090,CINV-LO,Vector: Hardware Interrupt LO
0091,CINV-HI,Vector: Hardware Interrupt HI
0094,NMINV ,Vector: Non-Maskable Interrupt
0096,STATUSWORD,Kernal I/O Status Word: ST
0097,LSTX  ,Current Key Pressed: 255 = No Key
009E,NDX   ,No. of Chars. in Keyboard Buffer (Queue)
00A2,AVAIL ,Not Used
00A9,GDBLN ,Character Under Cursor
00B1,ONEBYTE,Zero Page Storage B1
00B2,TWOBYTE,Zero Page Storage B2
00B3,TWOBYTE+1,Zero Page Storage B3
00B4,STACKCOPY,Zero Page Storage B4
00B5,MULTIPLICAND,Zero Page Storage B5
00B7,CHARPOINT,Zero Page Storage B7
00B8,ZP_B8,Zero Page Storage B8
00BB,ZP_BB,Zero Page Storage BB
00BC,CHARNUMBER,Zero Page Storage BC
00BD,PLOTDIR,Zero Page Storage BD
00BE,TEXTYPE,Zero Page Storage BE
00BF,RINONE,RS-232 Flag: Check for Start Bit (64#00A9)
00C0,XG,Zero Page Storage C0
00C1,XG+1,Zero Page Storage C1
00C4,PNT   ,Pointer: Current Screen Line Address
00C9,BYTE,Tape End Addresses/End of Program
00CA,BYTE+1,Tape End Addresses/End of Program
00CB,YG,Zero Page Storage CB
00CC,MASKONE,Zero Page Storage CC
00CE,ZP_CE,Zero Page Storage CE
00CF,ZP_CF,Zero Page Storage CF
00D3,SA    ,Current Secondary Address
00D5,LNMX  ,Physical Screen Line Length
00D9,DATAX ,Current Character to Print
00DA,FNADR ,Pointer: Current File Name
00DC,INSRT ,Flag: Insert Mode, >0 = # INSTs
00E0,SCTOP ,First line of window
00E1,SCBOT ,Last line of window
00E2,SCLF  ,First column of window
00E5,KOUNT ,Repeat Speed Counter
00E9,SCNVEC,Input from screen vector (from E006)
00F9,CAS1  ,Tape Motor Interlock #1
00FA,CAS2  ,Tape Motor Interlock #2
00FB,CHAR2,Zero Page Storage FB
00FD,RESULT,Results from graphics routine
00FE,ZP_FE,Zero Page Storage FE (note use of ABSOLUTE addressing mode!)
00FF,FLAG,Zero Page Storage FF
0279,LATCHCOPY,Copy of Control Latch contents
87F7,CHARSTORE,Character Storage
93EC,XEND,Storage at $93EC
93ED,XEND+1,Storage at $93ED
93EE,XPOINT,Storage at $93EE
93EF,XPOINT+1,Storage at $93EF
93F1,YEND,Storage at $93F1
93F2,YPOINT,Storage at $93F2
93F3,STOR_F3,Storage F3
A7F8,CHARBLOCKSTART,Character Pointer LO
A7F9,CHARBLOCKSTART+1,Character Pointer HI
B883,DO_BRAK,Perform []
BD84,TESTTYPE,Confirm Result
BD98,FRMEVL,Evaluate Expression in Text
BEF5,CHECKCOMMA,Test for comma
BF00,SYNERR,Output ?SYNTAX Error
C2EA,AYINT,FAC#1 to Positive Integer
C8D4,GETNUMERIC,Eval Byte Parameter
C92D,FLPINT,Convert FAC#1 to Integer in LINNUM
CD51,ROUND,Round FAC#1
D399,ROUTINE,CHRGET For Zero-page
E1E6,LOWTABLE,9 inch BASIC4
E748,LOWTABLE,BASIC2
E798,LOWTABLE,12 inch BASIC4
EFFF,LATCH,Control Register
[TABLES]
E800,E8FF,T,Hidden IO Area - Copyright
E92A,E937,T,Command Table
E938,E945,H,command vector HI
E946,E953,H,command vector LO
E956,E956.H.bit command
E987,E987,H,bit command
E98A,E98A,H,bit command
E98D,E98D,H,bit command
EBC7,EBC7,H,bit command
EBCA,EBCA,H,bit command
EE72,EE72,H,bit command
EFB9,EFC0,H,Bitmap HI byte for each character scanline
EFC1,EFC6,H,filler
[LABELS]
E7E9,MOVEBYTES
E7ED,GETBYTE1
E7FD,RETURNTEXT
E902,SYSENTRY
E90C,COMMANDLOOP
E918,SET_CONTROL
E921,COMMANDFOUND
E92A,COMMAND,Commands
E938,HICOMMAND,Command Vector HI
E946,LOCOMMAND,Command Vector LO
E954,KILL,Command "O" (Letter O)
E957,MOVELOOP
E959,MOVERTN
E972,CHARSET
E985,SET,Command "S"
E987,RESET
E988,RESET2
E98A,FLIP
E98B,FLIP2
E98D,DOT2
E98E,DOT
E9A4,INPUT
E9B3,CHECK1
E9BD,SECOND
E9D3,SYNTAX
E9D6,ONESET
E9EF,SETPOINT
E9FE,PLOTJMP
EA01,START
EA2A,YTESTA
EA30,YTEST
EA47,GRAD0
EA5B,PLOTORIZ
EA5E,TESTXH
EA67,PLOTVERT
EA6A,TESTYV
EA73,PLOT45
EA76,TESTXY
EA82,TILTX
EA8C,PLOTX
EA8F,TESTXX
EA9D,NOINCTB1
EAB8,PLOTX2
EABE,TILTY
EAC7,PLOTY
EACA,TESTYY
EAE2,INCXPLOT
EAEA,TraceEAEA
EAF0,PLOTY2
EAF6,XCOMPARE
EAF9,ALTERX
EB08,INCX1
EB0B,DECX
EB14,TraceEB14
EB16,DECX0
EB19,YCOMPARE
EB1C,ALTERY
EB26,DECY
EB2C,PLOT1
EB59,FOUNDY
EB5C,TraceEB5C
EB76,SETBYTE
EB78,PLOT2
EB86,FLIPLINE
EB8A,RETURN1
EB8B,SETLINE
EB92,DOTLINE
EBA2,RESETLINE
EBA7,CMD_E
EBA7,EXAMINE
EBB8,EXAMINEIN
EBBE,OUTMASK1
EBC4,NOTSET
EBC5,FLIPTEXT
EBC7,TEXT
EBC8,CMD_T
EBCB,OVERLAY
EBE5,IPBYTE
EBEE,SYNTAX18K
EBF0,SAVECHAR
EBF2,IPBYTE1
EC14,CONTEXT
EC16,CONTEXT1
EC26,UPTEXT
EC29,NEXTEXT
EC2B,NOTSKIP
EC35,NUMBERIN1
EC3A,NUMBERIN
EC3D,NUMBERIN3
EC51,TraceEC51
EC53,YOK
EC56,NUMERIC
EC64,SYNTAX1
EC67,VERTICAL
EC72,CONTLINE
EC76,HORIZ
EC8B,SKIPY
EC99,CONT1
EC9C,BACKIN
EC9F,BACKIN2
ECC6,RETRACE
ECCB,STACKLOOP
ECD3,SETXY
ECD6,LATCHREPLACE,Latch Replace
ECDE,WRITETEXT,Write Text
ECE0,TraceECE0
ECE6,LOOPDEC1
ECED,MASK1
ECEF,LOOPCHAR
ECF9,STOREBYTE1
ED04,LOOPDEC2
ED0D,FLIPTEXT1
ED11,FLIPTEXT2
ED15,MASK2
ED1B,BITS
ED28,INVERTBYTE
ED2E,INVERT2
ED38,END1
ED3A,NEXTLINE
ED44,LOOPBACK
ED46,GETSTRCHAR
ED50,RVSFLIP
ED57,FLIPBACK
ED58,CONCONT
ED6C,SUBTRACT80
ED6E,SUBTRACT40
ED70,STORE
ED74,MAP
ED89,RESMAP
ED8B,MAPIN
ED93,MAPOLDSET
EDA6,TESTBIT1
EDAA,TESTBIT2
EDB6,DOWNY
EDC1,NEXTLINECHECK
EDC5,TraceEDC5
EDD9,SECONDCHECK
EDE2,RETFILL
EDE3,LOOPMASK1
EDE8,LOOPMASK1A
EDF2,DECX1
EDF9,LEFTLOOP
EE0E,DECX2
EE1E,MASKOUT
EE24,LHWALL1
EE27,LHWALL
EE2D,SETBYTE1
EE31,LOOPMASK2
EE36,NLCSKIP
EE39,SKIPSKIP
EE41,XUP
EE45,LOOPMAKS2END
EE48,BYTEUP
EE54,CONTLOOP
EE5A,SETWHOLEBYTE
EE70,CLEAR
EE70,CMD_C
EE72,INVERT
EE7D,CLEARIN
EE89,LOOPSK
EE8B,LOOP1K
EE8D,LOOPLINE
EE95,CLEARSCREEN
EEAE,GETINT
EEBA,ALL3
EEBD,JUST2
EEC0,STOREPOINT
EECA,STOREND
EED4,CHECKY
EED8,OUTOFRANGE
EEDA,ERROREXIT
EEDF,OKEXIT
EEE3,CHECKX
EEE7,CHECKX2
EEF3,RETURN
EEF4,CHECKRAMON
EEF6,CHECKRAMON2,Check Graphics RAM is ON
EEF8,CHECKRAMON3
EF07,CHECKOK
EF08,ADDBYTE
EF0E,ADDHIBYTE
EF13,CMPYEND
EF1C,CMPXEND
EF23,TraceEF23
EF2C,RETXEND
EF2D,COMPAREY
EF34,DOWNBYTEY
EF3D,ADD1K
EF45,NOT1K
EF53,UPBYTEY
EF5E,TraceEF5E
EF62,CROSSLINE2
EF70,UPBYTEX
EF73,TraceEF73
EF76,BYTERET
EF77,UPPOINTX
EF78,TraceEF78
EF7F,POINTRET
EF80,DOWNBYTEX
EF86,DECBYTE
EF89,DOWNPOINTX
EF91,DECPOINT
EF95,LSRMASK
EF97,LOOPDEC
EF9D,LSRRET
EF9E,BYTETOCOPY
EFA7,COPYTOBYTE
EFB2,EORMAP
EFB9,HITABLE,Table of Screen Bytes
[COMMENTS]
E7E9,=,This is located in an unused area at the end of the Editor ROM
E800,=,This area is normally hidden under the IO area from $E800-E8FF
E900,=,Start of Main Code - Upper 2K of Editor ROM Space
E902,-.Entry point for SYS commands 59650
E918,-,If the command was not found use the value for the Control Register
E921,-,Push the target address on the stack and jump to it using RTS
E92A,-,Command Table
E938,-,Command Vectors
E954,=,"O" and "K" COMMANDS. OFF/KILL. Restore CHRGET routine.
E966,i,$E455 is default IRQ Vector
E972,=,"P" COMMAND. Set Pointer to Character Set
E985,=,"S" COMMANDS. +"P"=Set Point. +"L"=Set Line
E988,=,"R" COMMAND. Reset Line.
E98B,=,"F" COMMAND. +"L"=Flip Line. +"P"=Flip Point
E98E,=,"D" COMMAND. Dot Line.
E99A,i,Check second character. Is it "L"? L=Line.
EB44,i,$E798 is the TEXT SCREEN Line Address Table LO
EBA7,=,"E" COMMAND. Examine.
EBC5,=,$8B COMMAND (RVS K). FLIP Text
EBC8,=,"T" COMMAND. Text. +"NH"=Normal Horizontal
EBCB,=,$A4 COMMAND (RVS $). TEXT Routine
EBDB,i,Is it "R"?
EBDF,i,Is it "N"?
EBE8,i,Is it "H"?
EBEC,i,Is it "V"?
EC60,i,Is it COMMA?
ECD3,i,Jump to patch area in Editor ROM area
ED74,=,"M" COMMAND. Map Erase, Map Fill.
EE70,=,"C" COMMAND. Clear
EE72,=,"I" COMMAND. Invert
EE7D,i,$9000 - Start of Bitmap Data
EE98,i,40 columns?
EFB9,=,HI BYTE of start of each character scanline
EFC1,=,FILLER
EFC7,=,JUMP TABLE
